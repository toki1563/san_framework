
--------------------------------
[Vertex ShaderとPixel Shaderについて]
--------------------------------

Vertex ShaderとPixel Shaderは、ポリゴンの位置情報や画面に表示するピクセル情報を操作するための特別なプログラムです。

Vertex Shader（*.vsh）
Vertex Shaderは、3Dモデルの頂点データにアクセスし、位置やUVマッピングの設定などを行うために使用されます。このシェーダーは主に頂点に関する情報の設定に利用され、処理結果はPixel Shaderに渡されます。

Pixel Shader（*.psh）
Pixel Shaderは、ポリゴンの色や質感を決定するための情報を設定します。ここでは、UV座標を活用してテクスチャをピクセルごとに適用したり、光源の影響を受けた色の計算を行ったりします。この処理により、最終的に画面に表示される画像が生成されます。

--------------------------------
[Visual StudioでShaderファイルの追加]
--------------------------------

Vertex ShaderとPixel Shaderを使用するには、まずVisual Studioの「shader」ファイルタイプの設定を行う必要があります。
Visual Studioで、「shader」ファイルタイプを使うための設定を以下に示します。

--------------------------------
[コンパイル設定]
--------------------------------

Shaderは特定のコンパイラが必要なため、通常のcppファイルと異なるビルド手順が必要です。
Vertex ShaderとPixel Shaderのビルド設定を以下のように設定してください。

Vertex ShaderとPixel Shader用の設定
Visual Studioで、各Shaderファイルの「プロパティ」→「ビルドイベント」から「カスタムビルドツール」にアクセスし、「カスタムビルドツール」をHLSL（High Level Shader Language）のコンパイラとして設定します。

HLSL(High Level Shader Language): DirectX用のシェーダープログラム言語で、Vertex ShaderやPixel Shaderをビルドするために使用します。
ビルドオプションの設定例
以下は、Shaderファイルのビルド設定の例です。

plaintext
Copy code
//================================================================================================================================
   主要設定  
* 名前 = "VertexShader"
* 出力 = "PixelShader"
* Vertex Shaderの種類 = "*.vsh"
* Pixel Shaderの種類 = "*.psh"

// 各種のビルドオプション
@ $(ProjectDir)%(RelativeDir)%(Filename).cso
// シェーダーファイル名をプロジェクトディレクトリに基づいて設定
//=================================================================================================================================
--------------------------------
[構成モードの設定]
--------------------------------

Vertex ShaderとPixel Shaderをビルドするには、「Debug」や「Release」モードで、構成ごとに異なるビルドディレクトリを指定します。